version: "3"

services:
  angular:
    build: ./services/angular/.
    image: angular
    restart: always
    ports:
      - "4200:4200"
    stdin_open: true
    volumes:
      - frontend-storage:/var/www/frontend/
    networks:
      - www-net
    depends_on:
      - nestjs

  nestjs:
    build: ./services/nestjs/.
    image: nestjs
    restart: always
    ports:
      - "3000:3000"
    environment:
      - SECRET=${SECRET}
      - CLIENTID=${CLIENTID}
      - CLIENTSECRET=${CLIENTSECRET}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - REFRESH_TOKEN=${REFRESH_TOKEN}
      - EMAIL=${EMAIL}
    volumes:
      - backend-storage:/var/www/backend/
    networks:
      - www-net
    depends_on:
      - postgres

  postgres:
    build: ./services/postgres/.
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-storage:/var/lib/postgresql/data
    networks:
      - www-net

volumes:
  frontend-storage:
    driver: local
    driver_opts:
      type: none
      device: ./data/frontend
      o: bind
  backend-storage:
    driver: local
    driver_opts:
      type: none
      device: ./data/backend
      o: bind
  db-storage:
    driver: local
    driver_opts:
      type: none
      device: ./data/db
      o: bind

networks:
  www-net:
    driver: bridge

